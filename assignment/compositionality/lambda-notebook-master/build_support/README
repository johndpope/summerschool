This directory provides support for building the lambda notebook as a
standalone app.  Currently, this can only be done completely for OS X.

Here is what it does right now:

1. Bootstrap a self-contained virtualenv containing the lambda notebook and the
necessary infrastructure to run it.  This requires only python3 and
easy-install (you may need to fiddle with names/paths to get this to run).
    * Currently this doesn't install most of the scipy stack.
    * It doesn't install matplotlib.
    * It doesn't use the local version of the lambda notebook, but gets the
      current master from git.
    * The script that does this is in build_venv.sh.  This script is based on one in 
      a native wrapper for earlier versions of IPython by Marc Liyanage: 
      https://github.com/liyanage/ipython-notebook
    * While it is occasionally used this way (e.g. in the above app), virtualenv is not a good
      packaging solution.  In my testing, even with things like --relocatable,
      I could not generate a virtualenv that reliably runs on computers other than the one it
      was built on, because of low-level library dependencies.
    * WARNING: not everything installed in the virtualenv is suitable for packaged redistribution.
      E.g. pandoc is GPL and therefore can't be packaged with the lambda notebook.

2. Use py2app relative to this virtualenv to build an app bundle that contains
everything needed to run the notebook.  This (because of the way apps work)
cannot be double-clicked with coherent behavior, but the contained executable 
can be run from the command line.
    * I was not able to get numpy to work with py2app, hence the lack of packaging
      for most of the scipy stack.
    * I am not currently packaging mathjax; I could, but this makes the .app extremely
      painful to deal with because mathjax has 10s of thousands of (tiny) files.  (E.g. putting
      an .app with mathjax contained in it into a dropbox folder leads to an extremely slow
      upload relative to the size, at least in my testing.)  Right now the introductory 
      notebook has the mathjax insall command.  I think this is the right way to go.  This
      may be alleviated by .dmg packaging.

3. Use platypus to wrap another app bundle around this that starts the
notebook, displays the output in a window, and opens a browser window to the
notebook browser.
    * Platypus: http://www.sveinbjorn.org/platypus
    * You will need the command-line tool for platypus installed; you can do
      this in the platypus preferences window.
    * the app-within-app structure was inspired by another ipython packaging
      attempt: https://github.com/ptone/IPyApp

Step 1 should be applicable to any platform.  Step 2 should be transferrable to
py2exe but I haven't gotten anywhere near this now.  Step 3 is OS X specific.
To work on OS X version n, the app needs to be built on that version or an
earlier one.

Future packaging work may involve:
    * .dmg packaging.
    * a more sophisticated wrapper, potentially up to a native app using
      webkit.  (Cf. https://github.com/liyanage/ipython-notebook)
    * packaging for windows (use py2exe?).  Contributions welcome.
    * better support for customization; right now it is hard to change the
      notebook directory in a good way.
    * integration with nbopen: https://github.com/takluyver/nbopen
    * integration with nbmanager (IPython 3): https://github.com/takluyver/nbmanager
